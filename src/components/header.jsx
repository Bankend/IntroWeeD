import { Link } from "react-router-dom";
import { useAuth } from "../context/auth-context";
import { signOut } from "firebase/auth";
import { auth } from "../firebase";
import { useState } from "react";
import { useCart } from "../context/cart-context"; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

export default function Header() {
  const { user } = useAuth();
  const [open, setOpen] = useState(false);
  const { cartItems } = useCart(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
  const totalCount = cartItems.reduce((sum, item) => sum + item.quantity, 0); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

  // ‡∏õ‡∏£‡∏±‡∏ö menuClass ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ header ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ hover
  const menuClass =
    "px-2 py-1 rounded transition-colors duration-150 hover:bg-white hover:text-green-900 hover:border hover:border-white border border-transparent";

  return (
    <header className="bg-green-900 text-white p-4 flex justify-between items-center fixed top-0 left-0 w-full z-50 shadow">
      <Link
        to="/"
        className="flex items-center text-2xl font-bold focus:outline-none gap-2"
        style={{ textDecoration: "none" }} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏ï‡πâ‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ
        tabIndex={0}
        onClick={(e) => {
          // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ reload ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
          if (window.location.pathname === "/") {
            e.preventDefault();
            // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô scroll ‡πÅ‡∏ö‡∏ö custom ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∑‡πà‡∏ô
            const smoothScroll = () => {
              const c = document.documentElement.scrollTop || document.body.scrollTop;
              if (c > 0) {
                window.scrollTo(0, c - c / 12); // ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ä‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ
                requestAnimationFrame(smoothScroll);
              }
            };
            smoothScroll();
          }
          // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‡πÉ‡∏´‡πâ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ Link ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
        }}
      >
        <span role="img" aria-label="weed">üåø</span>
        IntroWeeD
      </Link>
      {/* Hamburger button */}
      <button
        className="md:hidden block focus:outline-none"
        onClick={() => setOpen(!open)}
        aria-label="Toggle menu"
      >
        <svg className="w-7 h-7" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" d={open ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"} />
        </svg>
      </button>
      {/* Desktop nav */}
      <nav className="space-x-4 hidden md:flex items-center">
        <Link to="/" className={menuClass}>‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Link>
        <Link to="/shop" className={menuClass}>‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</Link>
        <Link to="/cart" className={menuClass}>
          ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
          <span style={{ marginLeft: 4, color: "#fff", background: "#22c55e", borderRadius: "999px", padding: "2px 8px", fontSize: "0.9em" }}>
            {totalCount}
          </span>
        </Link>
        <Link to="/checkout" className={menuClass}>‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</Link>
        <Link to="/orders" className={menuClass}>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</Link>
        {user ? (
          <>
            <span className="text-sm">üëã {user.email}</span>
            <button onClick={() => signOut(auth)} className="underline">
              ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          </>
        ) : (
          <Link to="/login" className={menuClass}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Link>
        )}
      </nav>
      {/* Mobile nav */}
      {open && (
        <nav className="absolute top-16 left-0 w-full bg-green-900 text-white flex flex-col items-center space-y-4 py-4 z-50 md:hidden shadow-lg rounded-b">
          <Link to="/" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Link>
          <Link to="/shop" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</Link>
          <Link to="/cart" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>
            ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            <span style={{ marginLeft: 4, color: "#fff", background: "#22c55e", borderRadius: "999px", padding: "2px 8px", fontSize: "0.9em" }}>
              {totalCount}
            </span>
          </Link>
          <Link to="/checkout" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</Link>
          <Link to="/orders" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>
            ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
          </Link>
          {user ? (
            <>
              <span className="text-sm">üëã {user.email}</span>
              <button onClick={() => { signOut(auth); setOpen(false); }} className="underline">
                ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
              </button>
            </>
          ) : (
            <Link to="/login" className={menuClass + " w-11/12 text-center"} onClick={() => setOpen(false)}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Link>
          )}
        </nav>
      )}
    </header>
  );
}
